#lang racket
(define (abs x)
  (cond ((< x 0) (- x))
        (else x)))
(define (square x)
  (* x x))
(define (average x y)
  (/ (+ x y) 2))
(define (sqrt x)
  (define (good? guess)
  (< (abs(- (square guess) x))0.001))
  (define (sqrt-iter guess)
  (if (good? guess)
      guess
      (sqrt-iter (improve guess))))
  (define(improve guess)
  (average(/ x guess) guess))
  (sqrt-iter 1.0))